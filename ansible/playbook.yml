---
- hosts: all
  tasks:
  - name: XFS
    yum:
      update_cache: yes
      name: xfsprogs
      state: latest

  - name: Docker
    yum:
      name: docker
      state: latest

  - name: Add ec2-user to docker group
    user:
      name: ec2-user
      append: yes
      groups:
        - docker

  - name: Dockerd
    service:
      name: docker
      state: started

  - name: git
    yum:
      name: git
      state: latest

  - name: Mount dir for /data
    file: 
      path: /data
      state: directory

  - name: Create a xfs filesystem on /dev/xvdb
    filesystem:
      fstype: xfs
      dev: /dev/xvdb

  - name: Mount /dev/xvdb as /data
    mount:
      fstype: xfs
      state: mounted
      path: /data
      src: /dev/xvdb

  - name: Create database directory
    file:
      path: /data/db
      state: directory

  - name: Create letsencrypt directory
    file:
      path: /data/letsencrypt
      state: directory

  - name: Create certificate directory
    file:
      path: /data/cert
      state: directory

  - name: Create backup directory
    file:
      path: /home/ec2-user/db-dump
      state: directory

  - name: Copy deploy key
    copy:
      src: deploy.key
      dest: /root/.ssh/id_rsa
      mode: 0600

  - name: Setup backup repo
    git:
      repo: "git@github.com:research-software-directory/db-dump.git"
      key_file: /root/.ssh/id_rsa
      dest: /home/ec2-user/db-dump/rsd
      accept_hostkey: yes
      depth: 1
      version: master

  - name: Setup git config/name
    git_config:
      name: user.name
      value: AWS RSD v2 server

  - name: Setup git config/email
    git_config:
      name: user.email
      value: rsd@esciencecenter.nl

  - name: Create cron job for data backup
    cron:
      name: backup
      hour: 1
      minute: 0
      job: "/bin/bash /home/ec2-user/rsd/config/backup.sh"

  - name: RSD home
    file:
      path: /home/ec2-user/rsd
      state: directory

  - name: Create symlink for db directory
    file:
      src: /data/db
      dest: /home/ec2-user/rsd/db
      state: link
      force: yes

  - name: Create symlink for letsencrypt directory
    file:
      src: /data/letsencrypt
      dest: /home/ec2-user/rsd/letsencrypt
      state: link
      force: yes

  - name: Create symlink for cert directory
    file:
      src: /data/cert
      dest: /home/ec2-user/rsd/cert
      state: link
      force: yes

  - name: Copy (rsync) current directory
    synchronize:
      # ansible runs from a subfolder, so rsd directory will be ../../ apparently
      src: ../../
      dest: /home/ec2-user/rsd
      rsync_opts:
        - "--exclude=admin/node_modules"
        - "--exclude=admin/dist"
        - "--exclude=cert"
        - "--exclude=letsencrypt"
        - "--exclude=db"

#  - name: Clone RSD stack repo
#    git:
#      repo: 'https://github.com/research-software-directory/research-software-directory.git'
#      dest: /home/ec2-user/rsd/rsd
#      version: master
#
#  - name: Clone RSD frontend repo
#    git:
#      repo: 'https://github.com/research-software-directory/frontend.git'
#      dest: /home/ec2-user/rsd/frontend
#      version: master
#
#  - name: Clone RSD tasks-nlesc repo
#    git:
#      repo: 'https://github.com/research-software-directory/tasks-nlesc.git'
#      dest: /home/ec2-user/rsd/tasks-nlesc
#      version: master
#
#  - name: Clone RSD backend repo
#    git:
#      repo: 'https://github.com/research-software-directory/backend.git'
#      dest: /home/ec2-user/rsd/backend
#      version: master
#
#  - name: Clone RSD admin repo
#    git:
#      repo: 'https://github.com/research-software-directory/admin.git'
#      dest: /home/ec2-user/rsd/admin
#      version: master
#
#  - name: Clone RSD auth-github repo
#    git:
#      repo: 'https://github.com/research-software-directory/auth-github.git'
#      dest: /home/ec2-user/rsd/auth-github
#      version: master

  - name: Config file
    copy:
      src: .env.prd
      dest: /home/ec2-user/rsd/.env

  - name: docker-compose
    pip:
      name: docker-compose

  - name: Build & start stack
    docker_service:
      build: yes
      project_name: rsd
      project_src: /home/ec2-user/rsd
      files:
        - docker-compose.yml

  - name: Prune old Docker images
    command: docker system prune -f
  
